
trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
      - master

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build for master
  branches:
    include:
      - master

jobs:
- job: TestSuite
  strategy:
    matrix:
      Ubuntu-gcc-8:
        imageName: 'ubuntu-18.04'
        python.version: 3.7
        gfortran.version: 'gfortran-8'
        makefile.name: 'Makefile.gfortran'
        exec.name: 'cassandra_gfortran.exe'
        omp.num.threads: 1
      Ubuntu-gcc-9:
        imageName: 'ubuntu-18.04'
        python.version: 3.7
        gfortran.version: 'gfortran-9'
        makefile.name: 'Makefile.gfortran'
        exec.name: 'cassandra_gfortran.exe'
        omp.num.threads: 1
      Ubuntu-openMP:
        imageName: 'ubuntu-18.04'
        python.version: 3.7
        gfortran.version: 'gfortran-9'
        makefile.name: 'Makefile.gfortran.openMP'
        exec.name: 'cassandra_gfortran_openMP.exe'
        omp.num.threads: 8
      macOS-gcc-9:
        imageName: 'macOS-10.15'
        python.version: 3.7
        gfortran.version: 'gfortran-9'
        makefile.name: 'Makefile.gfortran'
        exec.name: 'cassandra_gfortran.exe'
        omp.num.threads: 1

  pool:
    vmImage: $(imageName)

  steps:

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add Conda to path

    - bash : echo "##vso[task.prependpath]$(Build.SourcesDirectory)/bin"
      displayName: Add Cassandra to path

    # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
    # We need to take ownership if we want to update conda or install packages globally
    - bash: sudo chown -R $USER $CONDA
      displayName: Take ownership of conda installation
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - bash: |
        brew install gcc@9
        brew upgrade gcc@9
        gfortran-9 --version
      displayName: Install gcc-latest macOS
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - bash: |
        cd Src
        make -f ${MAKEFILE_NAME} FC=${GFORTRAN_VERSION}
        mkdir ../bin
        cp ${EXEC_NAME} ../bin/cassandra.exe
        cp ../Scripts/Frag_Library_Setup/library_setup.py ../bin/.
        cd ../
      displayName: Build Cassandra

    - bash: |
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -c defaults conda
        conda update --all
        conda create -n test-environment python=$(python.version) --file requirements-py.txt
      displayName: Create a new bleeding test environment

    - bash: |
        echo Working directory:
        pwd
        echo ls:
        ls
        echo PATH:
        echo "$PATH"
        echo CASSANDRA:
        which cassandra.exe
      displayName: Check cassandra install

    - bash: |
        echo $OMP_NUM_THREADS
        source activate test-environment
        cd Scripts/testSuite/
        python testSuite.py ../../bin/cassandra.exe
      displayName: Run Tests


