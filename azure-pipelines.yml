
trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
      - master

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build for master
  branches:
    include:
      - master

jobs:
- job: TestSuite
  strategy:
    matrix:
      Ubuntu-gcc-8:
        imageName: 'ubuntu-18.04'
        python.version: 3.7
        #      Ubuntu-gcc-9:
        #        imageName: 'ubuntu-18.04'
        #        python.version: 3.7
        #      Ubuntu-openMP:
        #        imageName: 'ubuntu-18.04'
        #        python.version: 3.7
        #      macOS-gcc-latest:
        #        imageName: 'macOS-10.14'
        #        python.version: 3.7

  pool:
    vmImage: $(imageName)

  steps:

    - bash: echo $SYSTEM_JOBDISPLAYNAME
      displayName: Check variable

    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add Conda to path

    - bash : echo "##vso[task.prependpath]$(Build.SourcesDirectory)/bin"
      displayName: Add Cassandra to path

    # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
    # We need to take ownership if we want to update conda or install packages globally
    - bash: sudo chown -R $USER $CONDA
      displayName: Take ownership of conda installation
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - bash: |
        brew install gcc
        brew upgrade gcc
        gfortran --version
      displayName: Install gcc-latest macOS
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - bash: |
        cd Src
        make -f Makefile.gfortran FC=gfortran-8
        mkdir ../bin
        cp cassandra_gfortran.exe ../bin/cassandra.exe
        cp ../Scripts/Frag_Library_Setup/library_setup.py ../bin/.
        cd ../
      displayName: Build Linux gcc-8
      condition: and( eq( variables['Agent.OS'], 'Linux' ), endsWith( variables['System.JobDisplayName'], 'gcc-8'))

    - bash: |
        cd Src
        make -f Makefile.gfortran FC=gfortran-9
        mkdir ../bin
        cp cassandra_gfortran.exe ../bin/cassandra.exe
        cp ../Scripts/Frag_Library_Setup/library_setup.py ../bin/.
        cd ../
      displayName: Build Linux gcc-9
      condition: and( eq( variables['Agent.OS'], 'Linux' ), endsWith( variables['System.JobDisplayName'], 'gcc-9'))

    - bash: |
        cd Src
        make -f Makefile.gfortran.openMP FC=gfortran-9
        mkdir ../bin
        cp cassandra_gfortran.exe ../bin/cassandra.exe
        cp ../Scripts/Frag_Library_Setup/library_setup.py ../bin/.
        cd ../
      displayName: Build Linux openMP
      condition: and( eq( variables['Agent.OS'], 'Linux' ), endsWith( variables['System.JobDisplayName'], 'openMP'))

    - bash: |
        git clone https://github.com/MaginnGroup/Cassandra.git
        cd Cassandra/Src
        make -f Makefile.gfortran
        mkdir ../bin
        cp cassandra_gfortran.exe ../bin/cassandra.exe
        cp ../Scripts/Frag_Library_Setup/library_setup.py ../bin/.
        cd ../../
      displayName: Build macOS gfortran-latest
      condition: eq( variables['Agent.OS'], 'Darwin' )

    - bash: |
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -c defaults conda
        conda update --all
        conda create -n test-environment python=$(python.version) --file requirements-py.txt
      displayName: Create a new bleeding test environment

    - bash: |
        echo Working directory:
        pwd
        echo ls:
        ls
        echo PATH:
        echo "$PATH"
        echo CASSANDRA:
        which cassandra.exe
      displayName: Check cassandra install

    - bash: |
        source activate test-environment
        cd Scripts/testSuite/
        python testSuite.py ../../bin/cassandra.exe
      displayName: Run Tests


