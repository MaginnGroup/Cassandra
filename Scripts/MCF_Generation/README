********************************************************************************
* A tutorial for using this script can be found in the Documentation directory *
********************************************************************************

The current folder contains the following files and folders:

	(1) mcfgen.py: script to set up a simulation using data from literature. It uses the connectivity from either
		       a pdb or cml file.
	(2) /united_atom/: contains examples of MCF files for united atom models generated using this script. The examples provided are:
		(a) Argon
		(b) c2 (UA - Ethane)
		(c) c4 (UA - Butane)

	(3) /CML/: contains an example of an MCF file generated using this script using CML files.
		(a) Benzene (UA)

How to use mcfgen.py

Step 1.
   Generate a PDB file using a drawing package. We have used Gaussview to create PDB files and Avogadro to create CML files. 
   Append the atom type as a tag to each atom in the system, for example, for butane

	HETATM    1  C           0      -1.092   0.549   0.000                       C CH3  <----atom type!
	HETATM    2  C           0      -0.578   1.275   1.257                       C CH2  
	HETATM    3  C           0       0.962   1.275   1.257                       C CH2
	HETATM    4  C           0       1.475   2.004   2.513                       C CH3


Step 2.
   Run the following command from the directory containing the pdb or cml file and $PATH is the relative path to mcfgen.py

   > python $PATH/mcfgen.py pdborcmlfile --ffTemplate

   This will generate an .ff file template, whose name will be the
   same as the original pdb or cml file. This FF file template will have to be
   filled out using the force field parameters found in the
   literature.  Make sure you use proper units, as described in the
   code documentation.

Step 3.
   After you have filled the ff file, run the command

   > python $PATH/mcfgen.py pdborcmlfile

   This command will generate a Cassandra MCF file, whose name will be the same as the original pdb file. The script assumes that
an ff file with the same basename is in the current folder:

(1) CHECK ANY FILE PRODUCED BY THIS SCRIPT.

(2) If you are using a united atom model, make sure to correct the masses of each pseudo atom, since the masses appearing will be incorrect. (e.g. CH3 pseudo atom will have a mass of 12.0, instead of 15.0)

(3) You must fill out the FF file with values whose units are consistent with Cassandra.
    
    Cassandra units:
             Epsilon: K
             Sigma: Angstroms
             Angle: Degrees
             Angle constant: K/rad^2
             Dihedrals:
                   OPLS: All in kJ/mol
			
                   CHARMM: a0, n, d; kJ/mol, dimensionless, Degrees


(4) No Impropers are currently supported. You must add them by hand to the MCF file

(5) No double rings structures are currently supported

(6) In some species such as the hexafluorophosphate PF6 ion found in ionic liquids (i.e. one atom connected to several atoms), Gaussian generates a PDB file that looks like

    F
 F  |  F
  \ | /
   \|/
    P
   /|\
  / | \
 F  |  F
    F

CONECT    1    2    3    4    5
CONECT    1    6    7
CONECT    2    1
CONECT    3    1
CONECT    4    1
CONECT    5    1
CONECT    6    1
CONECT    7    1

Rearrange this in the following way (i.e. merge the two lines that contain the anchor atom)

CONECT    1    2    3    4    5    6    7
CONECT    2    1
CONECT    3    1
CONECT    4    1
CONECT    5    1
CONECT    6    1
CONECT    7    1

(7) Note that the pdb file and ff files must be located in the working directory.

(8) If an element is not found in the periodic table (i.e. possibly a dummy atom, like in TIP5P water models), 
its mass is assumed to be 0.0
